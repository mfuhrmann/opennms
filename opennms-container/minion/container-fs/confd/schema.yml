---
# Minion configuration schema
# TODO: Describe this file

# WIP Notes:
# - The frontend may want to just fetch the categories first and then fetch the contents of each category separately
# lazily
#
# - Types to use:
# host
# port
# host-with-port
# properties
# set
# enum
# indexed
# string
# boolean
# objects
#
# Example of generated input:
# {[
#     {
#         "key": "/a/b/c",
#         "value": "1.1.1.1"
#     },
#     {
#         "key": "/d/e/f",
#         "values": [
#             {
#                 "key": "this-key",
#                 "value": "myString"
#             }
#         ]
# ]}
#
# - Document is broken down into categories which can be nested
# - Categories have the following mandatory fields
#   - name
#   - label
#   - description
#   - config
#
# - Config is a list that has at least one item
#   - Each item in a list has the following mandatory fields
#   - name
#   - label
#   - description
#   - example
#   - type
#   - key
#
# - Types have at least a name field and may also optionally have the following fields
#   - validation
#   - items (in the case the type is a collection)
#     (items also have a type and a separator)
#
# - Additionally both categories and config can optionally have a 'tags' field containing arbitrary tags
#   - Currently the tag 'maas-internal' is used to hide certain categories in MaaS

# Version of Minion this schema configuration is applicable to
version: "foo"

# The root set of categories configurable on a Minion container
categories:
  # General
  - name: "general"
    label: "TODO"
    description: "TODO"
    config:
      # TODO: Should this key be hidden too?
      - name: "instance-id"
        type:
          name: "string"
          validation: "TODO"
        label: "TODO"
        description: "TODO"
        key: "/org.opennms.instance.id"
        example: "TODO"
      - name: "system-properties"
        type:
          name: "properties"
        label: "TODO"
        description: "TODO"
        key: "/system/properties"
        example: "TODO"
    categories:
      # General :: Controller
      - name: "controller"
        label: "TODO"
        description: "TODO"
        tags:
          - "maas-internal"
        config:
          - name: "location"
            type:
              name: "string"
              validation: "TODO"
            label: "TODO"
            description: "TODO"
            key: "/location"
            example: "TODO"
          - name: "id"
            type:
              name: "string"
              validation: "TODO"
            label: "TODO"
            description: "TODO"
            key: "/id"
            example: "TODO"
          - name: "broker-url"
            type:
              name: "url"
            label: "TODO"
            description: "TODO"
            key: "/broker-url"
            example: "TODO"
          - name: "http-url"
            type:
              name: "url"
            label: "TODO"
            description: "TODO"
            key: "/http-url"
            example: "TODO"
  # Dominion
  - name: "dominion"
    label: "TODO"
    description: "TODO"
    tags:
      - "maas-internal"
    categories:
      # Dominion :: gRPC
      - name: "grpc"
        label: "TODO"
        description: "TODO"
        config:
          - name: "host"
            type:
              name: "host"
            label: "TODO"
            description: "TODO"
            key: "/dominion/grpc/host"
            example: "TODO"
          - name: "port"
            type:
              name: "port"
            label: "TODO"
            description: "TODO"
            key: "/dominion/grpc/port"
            example: "TODO"
          - name: "client-secret"
            type:
              name: "string"
            label: "TODO"
            description: "TODO"
            key: "/dominion/grpc/client-secret"
            example: "TODO"
      # Dominion :: SCV
      - name: "scv"
        label: "TODO"
        description: "TODO"
        config:
          - name: "provider"
            type:
              name: "string"
            label: "TODO"
            description: "TODO"
            key: "/scv/provider"
            example: "TODO"
  # Karaf
  - name: "karaf"
    label: "TODO"
    description: "TODO"
    categories:
      # Karaf :: Management
      - name: "management"
        label: "TODO"
        description: "TODO"
        categories:
          # Karaf :: Management :: RMI
          - name: "rmi"
            label: "TODO"
            description: "TODO"
            config:
              - name: "registry-host"
                type:
                  name: "host"
                label: "TODO"
                description: "TODO"
                key: "/karaf/management/rmi/registry/host"
                example: "TODO"
              - name: "registry-port"
                type:
                  name: "port"
                label: "TODO"
                description: "TODO"
                key: "/karaf/management/rmi/registry/port"
                example: "TODO"
              - name: "server-host"
                type:
                  name: "host"
                label: "TODO"
                description: "TODO"
                key: "/karaf/management/rmi/server/host"
                example: "TODO"
              - name: "server-port"
                type:
                  name: "port"
                label: "TODO"
                description: "TODO"
                key: "/karaf/management/rmi/server/port"
                example: "TODO"
      # Karaf :: Shell
      - name: "shell"
        label: "TODO"
        description: "TODO"
        categories:
          # Karaf :: Shell :: SSH
          - name: "ssh"
            label: "TODO"
            description: "TODO"
            config:
              - name: "host"
                type:
                  name: "host"
                label: "TODO"
                description: "TODO"
                key: "/karaf/shell/ssh"
                example: "TODO"
              - name: "port"
                type:
                  name: "port"
                label: "TODO"
                description: "TODO"
                key: "/karaf/shell/port"
                example: "TODO"
  # Minion Environment
  - name: "environment"
    label: "TODO"
    description: "TODO"
    # TODO: Find out if this type is correct
    config:
      - name: "java-opts"
        type:
          name: "indexed"
          # TODO: What are the keys type's supposed to be?
          items:
            type:
              name: "string"
        label: "TODO"
        description: "TODO"
        key: "/process-env/java-opts"
        example: "TODO"
  # IPC Configuration
  - name: "ipc"
    label: "TODO"
    description: "TODO"
    categories:
      # IPC Configuration :: AWS
      - name: "aws"
        label: "TODO"
        description: "TODO"
        config:
          - name: "properties"
            label: "TODO"
            config:
              - name: "properties"
                type:
                  name: "properties"
                label: "TODO"
                description: "TODO"
                key: "/aws"
                example: "TODO"
        categories:
          # IPC Configuration :: AWS :: SQS
          - name: "sqs"
            label: "TODO"
            description: "TODO"
            config:
              - name: "properties"
                type:
                  name: "properties"
                label: "TODO"
                description: "TODO"
                key: "/ipc/sqs"
                example: "TODO"
      # IPC Configuration :: gRPC
      - name: "grpc"
        label: "TODO"
        description: "TODO"
        config:
          - name: "host"
            type:
              name: "host-with-port"
            label: "TODO"
            description: "TODO"
            key: "/ipc/grpc/host"
            example: "TODO"
          - name: "Properties"
            type:
              name: "properties"
            label: "Additional gRPC configuration properties for IPC gRPC"
            description: "TODO"
            key: "/ipc/grpc"
            example: "TODO"
      # IPC Configuration :: RPC
      - name: "rpc"
        label: "TODO"
        description: "TODO"
        categories:
          # IPC Configuration :: RPC :: Kafka
          - name: "kafka"
            label: "TODO"
            description: "TODO"
            config:
              - name: "bootstrap-servers"
                type:
                  name: "set"
                  items:
                    type:
                      name: "host-with-port"
                    separator: ","
                label: "Kafka bootstrap servers for IPC RPC"
                description: "TODO"
                key: "/ipc/rpc/kafka/bootstrap.servers"
                example: "TODO"
              - name: "properties"
                type:
                  name: "properties"
                label: "Additional Kafka configuration properties for IPC RPC"
                description: "TODO"
                key: "/ipc/rpc/kafka"
                example: "TODO"
      # IPC Configuration :: Sink
      - name: "sink"
        label: "TODO"
        description: "TODO"
        config:
          - name: "offheap"
            type:
              name: "properties"
            label: "TODO"
            description: "TODO"
            key: "/ipc/sink/offheap"
            example: "TODO"
        categories:
          # IPC Configuration :: Sink :: Kafka
          - name: "kafka"
            label: "TODO"
            description: "TODO"
            config:
              - name: "bootstrap-servers"
                type:
                  name: "set"
                  items:
                    type:
                      name: "host-with-port"
                    separator: ","
                label: "Kafka bootstrap servers for IPC Sink"
                description: "TODO"
                key: "/ipc/sink/kafka/bootstrap.servers"
                example: "TODO"
              - name: "properties"
                type:
                  name: "properties"
                label: "Additional Kafka configuration properties for IPC Sink"
                description: "TODO"
                key: "/ipc/sink/kafka"
                example: "TODO"
  # Netmgt
  - name: "netmgt"
    label: "TODO"
    description: "TODO"
    categories:
      # Netmgt :: Traps
      - name: "traps"
        label: "TODO"
        description: "TODO"
        config:
          - name: "properties"
            type:
              name: "properties"
            label: "TODO"
            description: "TODO"
            key: "/netmgt/traps"
            example: "TODO"
      # Netmgt :: Syslog
      - name: "syslog"
        label: "TODO"
        description: "TODO"
        config:
          - name: "properties"
            type:
              name: "properties"
            label: "TODO"
            description: "TODO"
            key: "/netmgt/syslog"
            example: "TODO"
  # Web
  - name: "web"
    label: "TODO"
    description: "TODO"
    categories:
      # Web :: Jetty
      - name: "jetty"
        label: "TODO"
        description: "TODO"
        config:
          - name: "http-listen-port"
            type:
              name: "port"
            label: "Jetty HTTP listen port"
            description: "TODO"
            key: "/jetty/web/port"
            example: "TODO"
          - name: "listen-address"
            type:
              name: "set"
              items:
                type:
                  name: "host"
                separator: ","
            label: "Jetty listen addresses"
            description: "TODO"
            key: "/jetty/web/host"
            example: "TODO"
  # Telemetry
  - name: "telemetry"
    label: "TODO"
    description: "TODO"
    categories:
      # Telemetry :: Flows
      - name: "flows"
        label: "TODO"
        description: "TODO"
        config:
          - name: "flow-listener-def"
            type:
              - name: "objects"
                fields:
                  - name: "listener-name"
                    type:
                      name: "string"
                      validation: "TODO"
                  - name: "class-name"
                    type:
                      name: "string"
                      validation: "TODO"
                  - name: "parameters"
                    type:
                      name: "properties"
                index-field: "listener-name"
            label: "TODO"
            description: "TODO"
            key: "/telemetry/flows/listeners"
            example: "TODO"
          - name: "flow-parser-def"
            type:
              - name: "objects"
                fields:
                  - name: "parser-name"
                    type:
                      name: "string"
                      validation: "TODO"
                  - name: "class-name"
                    type:
                      name: "string"
                      validation: "TODO"
                  - name: "parameters"
                    type:
                      name: "properties"
                index-field: "parser-name"
            label: "TODO"
            description: "TODO"
            key: "/telemetry/flows/parsers"
            example: "TODO"
        categories:
          # Telemetry :: Flows :: Single Port Listener
          - name: "single-port-listener"
            label: "TODO"
            description: "TODO"
            config:
              - name: "enabled"
                type:
                  name: "boolean"
                label: "TODO"
                description: "TODO"
                key: "/telemetry/flows/single-port-listener/enabled"
                example: "TODO"
              - name: "name"
                type:
                  name: "string"
                  validation: "TODO"
                label: "TODO"
                description: "TODO"
                key: "/telemetry/flows/single-port-listener/name"
                example: "TODO"
              - name: "parameters"
                type:
                  name: "properties"
                label: "TODO"
                description: "TODO"
                key: "/telemetry/flows/single-port-listener/parameters"
                example: "TODO"
